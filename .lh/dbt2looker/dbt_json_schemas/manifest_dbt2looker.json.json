{
    "sourceFile": "dbt2looker/dbt_json_schemas/manifest_dbt2looker.json",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1633439381281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1633439381281,
            "name": "Commit-0",
            "content": "{\n  \"type\": \"object\",\n  \"required\": [\n    \"metadata\",\n    \"nodes\",\n    \"sources\",\n    \"macros\",\n    \"docs\",\n    \"exposures\",\n    \"selectors\"\n  ],\n  \"properties\": {\n    \"metadata\": {\n      \"$ref\": \"#/definitions/ManifestMetadata\",\n      \"description\": \"Metadata about the manifest\"\n    },\n    \"nodes\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/definitions/CompiledAnalysisNode\"\n          },\n          {\n            \"$ref\": \"#/definitions/CompiledDataTestNode\"\n          },\n          {\n            \"$ref\": \"#/definitions/CompiledModelNode\"\n          },\n          {\n            \"$ref\": \"#/definitions/CompiledHookNode\"\n          },\n          {\n            \"$ref\": \"#/definitions/CompiledRPCNode\"\n          },\n          {\n            \"$ref\": \"#/definitions/CompiledSchemaTestNode\"\n          },\n          {\n            \"$ref\": \"#/definitions/CompiledSeedNode\"\n          },\n          {\n            \"$ref\": \"#/definitions/CompiledSnapshotNode\"\n          },\n          {\n            \"$ref\": \"#/definitions/ParsedAnalysisNode\"\n          },\n          {\n            \"$ref\": \"#/definitions/ParsedDataTestNode\"\n          },\n          {\n            \"$ref\": \"#/definitions/ParsedHookNode\"\n          },\n          {\n            \"$ref\": \"#/definitions/ParsedModelNode\"\n          },\n          {\n            \"$ref\": \"#/definitions/ParsedRPCNode\"\n          },\n          {\n            \"$ref\": \"#/definitions/ParsedSchemaTestNode\"\n          },\n          {\n            \"$ref\": \"#/definitions/ParsedSeedNode\"\n          },\n          {\n            \"$ref\": \"#/definitions/ParsedSnapshotNode\"\n          }\n        ]\n      },\n      \"description\": \"The nodes defined in the dbt project and its dependencies\"\n    },\n    \"sources\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/ParsedSourceDefinition\"\n      },\n      \"description\": \"The sources defined in the dbt project and its dependencies\"\n    },\n    \"macros\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/ParsedMacro\"\n      },\n      \"description\": \"The macros defined in the dbt project and its dependencies\"\n    },\n    \"docs\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/ParsedDocumentation\"\n      },\n      \"description\": \"The docs defined in the dbt project and its dependencies\"\n    },\n    \"exposures\": {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"$ref\": \"#/definitions/ParsedExposure\"\n      },\n      \"description\": \"The exposures defined in the dbt project and its dependencies\"\n    },\n    \"selectors\": {\n      \"type\": \"object\",\n      \"description\": \"The selectors defined in selectors.yml\"\n    },\n    \"disabled\": {\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/definitions/CompiledAnalysisNode\"\n              },\n              {\n                \"$ref\": \"#/definitions/CompiledDataTestNode\"\n              },\n              {\n                \"$ref\": \"#/definitions/CompiledModelNode\"\n              },\n              {\n                \"$ref\": \"#/definitions/CompiledHookNode\"\n              },\n              {\n                \"$ref\": \"#/definitions/CompiledRPCNode\"\n              },\n              {\n                \"$ref\": \"#/definitions/CompiledSchemaTestNode\"\n              },\n              {\n                \"$ref\": \"#/definitions/CompiledSeedNode\"\n              },\n              {\n                \"$ref\": \"#/definitions/CompiledSnapshotNode\"\n              },\n              {\n                \"$ref\": \"#/definitions/ParsedAnalysisNode\"\n              },\n              {\n                \"$ref\": \"#/definitions/ParsedDataTestNode\"\n              },\n              {\n                \"$ref\": \"#/definitions/ParsedHookNode\"\n              },\n              {\n                \"$ref\": \"#/definitions/ParsedModelNode\"\n              },\n              {\n                \"$ref\": \"#/definitions/ParsedRPCNode\"\n              },\n              {\n                \"$ref\": \"#/definitions/ParsedSchemaTestNode\"\n              },\n              {\n                \"$ref\": \"#/definitions/ParsedSeedNode\"\n              },\n              {\n                \"$ref\": \"#/definitions/ParsedSnapshotNode\"\n              },\n              {\n                \"$ref\": \"#/definitions/ParsedSourceDefinition\"\n              }\n            ]\n          }\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"description\": \"A list of the disabled nodes in the target\"\n    },\n    \"parent_map\": {\n      \"oneOf\": [\n        {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"description\": \"A mapping from\\u00a0child nodes to their dependencies\"\n    },\n    \"child_map\": {\n      \"oneOf\": [\n        {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        {\n          \"type\": \"null\"\n        }\n      ],\n      \"description\": \"A mapping from parent nodes to their dependents\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"description\": \"WritableManifest(metadata: dbt.contracts.graph.manifest.ManifestMetadata, nodes: Mapping[str, Union[dbt.contracts.graph.compiled.CompiledAnalysisNode, dbt.contracts.graph.compiled.CompiledDataTestNode, dbt.contracts.graph.compiled.CompiledModelNode, dbt.contracts.graph.compiled.CompiledHookNode, dbt.contracts.graph.compiled.CompiledRPCNode, dbt.contracts.graph.compiled.CompiledSchemaTestNode, dbt.contracts.graph.compiled.CompiledSeedNode, dbt.contracts.graph.compiled.CompiledSnapshotNode, dbt.contracts.graph.parsed.ParsedAnalysisNode, dbt.contracts.graph.parsed.ParsedDataTestNode, dbt.contracts.graph.parsed.ParsedHookNode, dbt.contracts.graph.parsed.ParsedModelNode, dbt.contracts.graph.parsed.ParsedRPCNode, dbt.contracts.graph.parsed.ParsedSchemaTestNode, dbt.contracts.graph.parsed.ParsedSeedNode, dbt.contracts.graph.parsed.ParsedSnapshotNode]], sources: Mapping[str, dbt.contracts.graph.parsed.ParsedSourceDefinition], macros: Mapping[str, dbt.contracts.graph.parsed.ParsedMacro], docs: Mapping[str, dbt.contracts.graph.parsed.ParsedDocumentation], exposures: Mapping[str, dbt.contracts.graph.parsed.ParsedExposure], selectors: Mapping[str, Any], disabled: Union[List[Union[dbt.contracts.graph.compiled.CompiledAnalysisNode, dbt.contracts.graph.compiled.CompiledDataTestNode, dbt.contracts.graph.compiled.CompiledModelNode, dbt.contracts.graph.compiled.CompiledHookNode, dbt.contracts.graph.compiled.CompiledRPCNode, dbt.contracts.graph.compiled.CompiledSchemaTestNode, dbt.contracts.graph.compiled.CompiledSeedNode, dbt.contracts.graph.compiled.CompiledSnapshotNode, dbt.contracts.graph.parsed.ParsedAnalysisNode, dbt.contracts.graph.parsed.ParsedDataTestNode, dbt.contracts.graph.parsed.ParsedHookNode, dbt.contracts.graph.parsed.ParsedModelNode, dbt.contracts.graph.parsed.ParsedRPCNode, dbt.contracts.graph.parsed.ParsedSchemaTestNode, dbt.contracts.graph.parsed.ParsedSeedNode, dbt.contracts.graph.parsed.ParsedSnapshotNode, dbt.contracts.graph.parsed.ParsedSourceDefinition]], NoneType], parent_map: Union[Dict[str, List[str]], NoneType], child_map: Union[Dict[str, List[str]], NoneType])\",\n  \"definitions\": {\n    \"ManifestMetadata\": {\n      \"type\": \"object\",\n      \"required\": [],\n      \"properties\": {\n        \"dbt_schema_version\": {\n          \"type\": \"string\",\n          \"default\": \"https://schemas.getdbt.com/dbt/manifest/v2.json\"\n        },\n        \"dbt_version\": {\n          \"type\": \"string\",\n          \"default\": \"0.20.0rc1\"\n        },\n        \"generated_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"default\": \"2021-06-07T14:49:01.099700Z\"\n        },\n        \"invocation_id\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"env\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          },\n          \"default\": {}\n        },\n        \"project_id\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"description\": \"A unique identifier for the project\"\n        },\n        \"user_id\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\",\n              \"pattern\": \"[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"description\": \"A unique identifier for the user\"\n        },\n        \"send_anonymous_usage_stats\": {\n          \"oneOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"description\": \"Whether dbt is configured to send anonymous usage statistics\"\n        },\n        \"adapter_type\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"description\": \"The type name of the adapter\"\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"Metadata for the manifest.\"\n    },\n    \"CompiledAnalysisNode\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"raw_sql\",\n        \"compiled\",\n        \"schema\",\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"resource_type\",\n        \"alias\",\n        \"checksum\"\n      ],\n      \"properties\": {\n        \"raw_sql\": {\n          \"type\": \"string\"\n        },\n        \"compiled\": {\n          \"type\": \"boolean\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"analysis\"\n          ]\n        },\n        \"alias\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"$ref\": \"#/definitions/FileHash\"\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/NodeConfig\",\n          \"default\": {\n            \"enabled\": true,\n            \"materialized\": \"view\",\n            \"persist_docs\": {},\n            \"vars\": {},\n            \"quoting\": {},\n            \"column_types\": {},\n            \"alias\": null,\n            \"schema\": null,\n            \"database\": null,\n            \"tags\": [],\n            \"full_refresh\": null,\n            \"post-hook\": [],\n            \"pre-hook\": []\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"compiled_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"build_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"deferred\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        },\n        \"compiled_sql\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"extra_ctes_injected\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"extra_ctes\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/InjectedCTE\"\n          },\n          \"default\": []\n        },\n        \"relation_name\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"CompiledAnalysisNode(raw_sql: str, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[Any]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: int = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None)\"\n    },\n    \"FileHash\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"name\",\n        \"checksum\"\n      ],\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"type\": \"string\"\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"FileHash(name: str, checksum: str)\"\n    },\n    \"NodeConfig\": {\n      \"type\": \"object\",\n      \"required\": [],\n      \"properties\": {\n        \"enabled\": {\n          \"type\": \"boolean\",\n          \"default\": true\n        },\n        \"materialized\": {\n          \"type\": \"string\",\n          \"default\": \"view\"\n        },\n        \"persist_docs\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"post-hook\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Hook\"\n          },\n          \"default\": []\n        },\n        \"pre-hook\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Hook\"\n          },\n          \"default\": []\n        },\n        \"vars\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"quoting\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"column_types\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"alias\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"tags\": {\n          \"oneOf\": [\n            {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"type\": \"string\"\n            }\n          ],\n          \"default\": []\n        },\n        \"full_refresh\": {\n          \"oneOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": true,\n      \"description\": \"NodeConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True, materialized: str = 'view', persist_docs: Dict[str, Any] = <factory>, post_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, pre_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, vars: Dict[str, Any] = <factory>, quoting: Dict[str, Any] = <factory>, column_types: Dict[str, Any] = <factory>, alias: Union[str, NoneType] = None, schema: Union[str, NoneType] = None, database: Union[str, NoneType] = None, tags: Union[List[str], str] = <factory>, full_refresh: Union[bool, NoneType] = None)\"\n    },\n    \"Hook\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"sql\"\n      ],\n      \"properties\": {\n        \"sql\": {\n          \"type\": \"string\"\n        },\n        \"transaction\": {\n          \"type\": \"boolean\",\n          \"default\": true\n        },\n        \"index\": {\n          \"oneOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"Hook(sql: str, transaction: bool = True, index: Union[int, NoneType] = None)\"\n    },\n    \"DependsOn\": {\n      \"type\": \"object\",\n      \"required\": [],\n      \"properties\": {\n        \"macros\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"nodes\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"DependsOn(macros: List[str] = <factory>, nodes: List[str] = <factory>)\"\n    },\n    \"ColumnInfo\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"name\"\n      ],\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"data_type\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"quote\": {\n          \"oneOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        }\n      },\n      \"additionalProperties\": true,\n      \"description\": \"ColumnInfo(name: str, description: str = '', meta: Dict[str, Any] = <factory>, data_type: Union[str, NoneType] = None, quote: Union[bool, NoneType] = None, tags: List[str] = <factory>, _extra: Dict[str, Any] = <factory>)\"\n    },\n    \"Docs\": {\n      \"type\": \"object\",\n      \"required\": [],\n      \"properties\": {\n        \"show\": {\n          \"type\": \"boolean\",\n          \"default\": true\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"Docs(show: bool = True)\"\n    },\n    \"InjectedCTE\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"id\",\n        \"sql\"\n      ],\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"sql\": {\n          \"type\": \"string\"\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"InjectedCTE(id: str, sql: str)\"\n    },\n    \"CompiledDataTestNode\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"raw_sql\",\n        \"compiled\",\n        \"schema\",\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"resource_type\",\n        \"alias\",\n        \"checksum\"\n      ],\n      \"properties\": {\n        \"raw_sql\": {\n          \"type\": \"string\"\n        },\n        \"compiled\": {\n          \"type\": \"boolean\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"test\"\n          ]\n        },\n        \"alias\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"$ref\": \"#/definitions/FileHash\"\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/TestConfig\",\n          \"default\": {\n            \"enabled\": true,\n            \"materialized\": \"test\",\n            \"persist_docs\": {},\n            \"vars\": {},\n            \"quoting\": {},\n            \"column_types\": {},\n            \"alias\": null,\n            \"schema\": \"dbt_test__audit\",\n            \"database\": null,\n            \"tags\": [],\n            \"full_refresh\": null,\n            \"severity\": \"ERROR\",\n            \"store_failures\": null,\n            \"where\": null,\n            \"limit\": null,\n            \"fail_calc\": \"count(*)\",\n            \"warn_if\": \"!= 0\",\n            \"error_if\": \"!= 0\",\n            \"post-hook\": [],\n            \"pre-hook\": []\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"compiled_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"build_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"deferred\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        },\n        \"compiled_sql\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"extra_ctes_injected\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"extra_ctes\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/InjectedCTE\"\n          },\n          \"default\": []\n        },\n        \"relation_name\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"CompiledDataTestNode(raw_sql: str, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.TestConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[Any]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: int = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None)\"\n    },\n    \"TestConfig\": {\n      \"type\": \"object\",\n      \"required\": [],\n      \"properties\": {\n        \"enabled\": {\n          \"type\": \"boolean\",\n          \"default\": true\n        },\n        \"materialized\": {\n          \"type\": \"string\",\n          \"default\": \"test\"\n        },\n        \"persist_docs\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"post-hook\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Hook\"\n          },\n          \"default\": []\n        },\n        \"pre-hook\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Hook\"\n          },\n          \"default\": []\n        },\n        \"vars\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"quoting\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"column_types\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"alias\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": \"dbt_test__audit\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"tags\": {\n          \"oneOf\": [\n            {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"type\": \"string\"\n            }\n          ],\n          \"default\": []\n        },\n        \"full_refresh\": {\n          \"oneOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"severity\": {\n          \"type\": \"string\",\n          \"pattern\": \"^([Ww][Aa][Rr][Nn]|[Ee][Rr][Rr][Oo][Rr])$\",\n          \"default\": \"ERROR\"\n        },\n        \"store_failures\": {\n          \"oneOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"where\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"limit\": {\n          \"oneOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"fail_calc\": {\n          \"type\": \"string\",\n          \"default\": \"count(*)\"\n        },\n        \"warn_if\": {\n          \"type\": \"string\",\n          \"default\": \"!= 0\"\n        },\n        \"error_if\": {\n          \"type\": \"string\",\n          \"default\": \"!= 0\"\n        }\n      },\n      \"additionalProperties\": true,\n      \"description\": \"TestConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True, materialized: str = 'test', persist_docs: Dict[str, Any] = <factory>, post_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, pre_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, vars: Dict[str, Any] = <factory>, quoting: Dict[str, Any] = <factory>, column_types: Dict[str, Any] = <factory>, alias: Union[str, NoneType] = None, schema: Union[str, NoneType] = 'dbt_test__audit', database: Union[str, NoneType] = None, tags: Union[List[str], str] = <factory>, full_refresh: Union[bool, NoneType] = None, severity: dbt.contracts.graph.model_config.Severity = 'ERROR', store_failures: Union[bool, NoneType] = None, where: Union[str, NoneType] = None, limit: Union[int, NoneType] = None, fail_calc: str = 'count(*)', warn_if: str = '!= 0', error_if: str = '!= 0')\"\n    },\n    \"CompiledModelNode\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"raw_sql\",\n        \"compiled\",\n        \"schema\",\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"resource_type\",\n        \"alias\",\n        \"checksum\"\n      ],\n      \"properties\": {\n        \"raw_sql\": {\n          \"type\": \"string\"\n        },\n        \"compiled\": {\n          \"type\": \"boolean\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"model\"\n          ]\n        },\n        \"alias\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"$ref\": \"#/definitions/FileHash\"\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/NodeConfig\",\n          \"default\": {\n            \"enabled\": true,\n            \"materialized\": \"view\",\n            \"persist_docs\": {},\n            \"vars\": {},\n            \"quoting\": {},\n            \"column_types\": {},\n            \"alias\": null,\n            \"schema\": null,\n            \"database\": null,\n            \"tags\": [],\n            \"full_refresh\": null,\n            \"post-hook\": [],\n            \"pre-hook\": []\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"compiled_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"build_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"deferred\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        },\n        \"compiled_sql\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"extra_ctes_injected\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"extra_ctes\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/InjectedCTE\"\n          },\n          \"default\": []\n        },\n        \"relation_name\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"CompiledModelNode(raw_sql: str, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[Any]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: int = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None)\"\n    },\n    \"CompiledHookNode\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"raw_sql\",\n        \"compiled\",\n        \"schema\",\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"resource_type\",\n        \"alias\",\n        \"checksum\"\n      ],\n      \"properties\": {\n        \"raw_sql\": {\n          \"type\": \"string\"\n        },\n        \"compiled\": {\n          \"type\": \"boolean\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"operation\"\n          ]\n        },\n        \"alias\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"$ref\": \"#/definitions/FileHash\"\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/NodeConfig\",\n          \"default\": {\n            \"enabled\": true,\n            \"materialized\": \"view\",\n            \"persist_docs\": {},\n            \"vars\": {},\n            \"quoting\": {},\n            \"column_types\": {},\n            \"alias\": null,\n            \"schema\": null,\n            \"database\": null,\n            \"tags\": [],\n            \"full_refresh\": null,\n            \"post-hook\": [],\n            \"pre-hook\": []\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"compiled_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"build_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"deferred\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        },\n        \"compiled_sql\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"extra_ctes_injected\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"extra_ctes\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/InjectedCTE\"\n          },\n          \"default\": []\n        },\n        \"relation_name\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"index\": {\n          \"oneOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"CompiledHookNode(raw_sql: str, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[Any]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: int = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None, index: Union[int, NoneType] = None)\"\n    },\n    \"CompiledRPCNode\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"raw_sql\",\n        \"compiled\",\n        \"schema\",\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"resource_type\",\n        \"alias\",\n        \"checksum\"\n      ],\n      \"properties\": {\n        \"raw_sql\": {\n          \"type\": \"string\"\n        },\n        \"compiled\": {\n          \"type\": \"boolean\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"rpc\"\n          ]\n        },\n        \"alias\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"$ref\": \"#/definitions/FileHash\"\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/NodeConfig\",\n          \"default\": {\n            \"enabled\": true,\n            \"materialized\": \"view\",\n            \"persist_docs\": {},\n            \"vars\": {},\n            \"quoting\": {},\n            \"column_types\": {},\n            \"alias\": null,\n            \"schema\": null,\n            \"database\": null,\n            \"tags\": [],\n            \"full_refresh\": null,\n            \"post-hook\": [],\n            \"pre-hook\": []\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"compiled_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"build_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"deferred\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        },\n        \"compiled_sql\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"extra_ctes_injected\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"extra_ctes\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/InjectedCTE\"\n          },\n          \"default\": []\n        },\n        \"relation_name\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"CompiledRPCNode(raw_sql: str, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[Any]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: int = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None)\"\n    },\n    \"CompiledSchemaTestNode\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"raw_sql\",\n        \"test_metadata\",\n        \"compiled\",\n        \"schema\",\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"resource_type\",\n        \"alias\",\n        \"checksum\"\n      ],\n      \"properties\": {\n        \"raw_sql\": {\n          \"type\": \"string\"\n        },\n        \"test_metadata\": {\n          \"$ref\": \"#/definitions/TestMetadata\"\n        },\n        \"compiled\": {\n          \"type\": \"boolean\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"test\"\n          ]\n        },\n        \"alias\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"$ref\": \"#/definitions/FileHash\"\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/TestConfig\",\n          \"default\": {\n            \"enabled\": true,\n            \"materialized\": \"test\",\n            \"persist_docs\": {},\n            \"vars\": {},\n            \"quoting\": {},\n            \"column_types\": {},\n            \"alias\": null,\n            \"schema\": \"dbt_test__audit\",\n            \"database\": null,\n            \"tags\": [],\n            \"full_refresh\": null,\n            \"severity\": \"ERROR\",\n            \"store_failures\": null,\n            \"where\": null,\n            \"limit\": null,\n            \"fail_calc\": \"count(*)\",\n            \"warn_if\": \"!= 0\",\n            \"error_if\": \"!= 0\",\n            \"post-hook\": [],\n            \"pre-hook\": []\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"compiled_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"build_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"deferred\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        },\n        \"compiled_sql\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"extra_ctes_injected\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"extra_ctes\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/InjectedCTE\"\n          },\n          \"default\": []\n        },\n        \"relation_name\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"column_name\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"CompiledSchemaTestNode(raw_sql: str, test_metadata: dbt.contracts.graph.parsed.TestMetadata, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.TestConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[Any]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: int = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None, column_name: Union[str, NoneType] = None)\"\n    },\n    \"TestMetadata\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"name\"\n      ],\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"kwargs\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"namespace\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"TestMetadata(name: str, kwargs: Dict[str, Any] = <factory>, namespace: Union[str, NoneType] = None)\"\n    },\n    \"CompiledSeedNode\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"raw_sql\",\n        \"compiled\",\n        \"schema\",\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"resource_type\",\n        \"alias\",\n        \"checksum\"\n      ],\n      \"properties\": {\n        \"raw_sql\": {\n          \"type\": \"string\"\n        },\n        \"compiled\": {\n          \"type\": \"boolean\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"seed\"\n          ]\n        },\n        \"alias\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"$ref\": \"#/definitions/FileHash\"\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/SeedConfig\",\n          \"default\": {\n            \"enabled\": true,\n            \"materialized\": \"seed\",\n            \"persist_docs\": {},\n            \"vars\": {},\n            \"quoting\": {},\n            \"column_types\": {},\n            \"alias\": null,\n            \"schema\": null,\n            \"database\": null,\n            \"tags\": [],\n            \"full_refresh\": null,\n            \"quote_columns\": null,\n            \"post-hook\": [],\n            \"pre-hook\": []\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"compiled_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"build_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"deferred\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        },\n        \"compiled_sql\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"extra_ctes_injected\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"extra_ctes\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/InjectedCTE\"\n          },\n          \"default\": []\n        },\n        \"relation_name\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"CompiledSeedNode(raw_sql: str, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.SeedConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[Any]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: int = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None)\"\n    },\n    \"SeedConfig\": {\n      \"type\": \"object\",\n      \"required\": [],\n      \"properties\": {\n        \"enabled\": {\n          \"type\": \"boolean\",\n          \"default\": true\n        },\n        \"materialized\": {\n          \"type\": \"string\",\n          \"default\": \"seed\"\n        },\n        \"persist_docs\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"post-hook\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Hook\"\n          },\n          \"default\": []\n        },\n        \"pre-hook\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Hook\"\n          },\n          \"default\": []\n        },\n        \"vars\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"quoting\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"column_types\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"alias\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"tags\": {\n          \"oneOf\": [\n            {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"type\": \"string\"\n            }\n          ],\n          \"default\": []\n        },\n        \"full_refresh\": {\n          \"oneOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"quote_columns\": {\n          \"oneOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": true,\n      \"description\": \"SeedConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True, materialized: str = 'seed', persist_docs: Dict[str, Any] = <factory>, post_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, pre_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, vars: Dict[str, Any] = <factory>, quoting: Dict[str, Any] = <factory>, column_types: Dict[str, Any] = <factory>, alias: Union[str, NoneType] = None, schema: Union[str, NoneType] = None, database: Union[str, NoneType] = None, tags: Union[List[str], str] = <factory>, full_refresh: Union[bool, NoneType] = None, quote_columns: Union[bool, NoneType] = None)\"\n    },\n    \"CompiledSnapshotNode\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"raw_sql\",\n        \"compiled\",\n        \"schema\",\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"resource_type\",\n        \"alias\",\n        \"checksum\"\n      ],\n      \"properties\": {\n        \"raw_sql\": {\n          \"type\": \"string\"\n        },\n        \"compiled\": {\n          \"type\": \"boolean\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"snapshot\"\n          ]\n        },\n        \"alias\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"$ref\": \"#/definitions/FileHash\"\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/NodeConfig\",\n          \"default\": {\n            \"enabled\": true,\n            \"materialized\": \"view\",\n            \"persist_docs\": {},\n            \"vars\": {},\n            \"quoting\": {},\n            \"column_types\": {},\n            \"alias\": null,\n            \"schema\": null,\n            \"database\": null,\n            \"tags\": [],\n            \"full_refresh\": null,\n            \"post-hook\": [],\n            \"pre-hook\": []\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"compiled_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"build_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"deferred\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        },\n        \"compiled_sql\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"extra_ctes_injected\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"extra_ctes\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/InjectedCTE\"\n          },\n          \"default\": []\n        },\n        \"relation_name\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"CompiledSnapshotNode(raw_sql: str, compiled: bool, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[Any]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: int = <factory>, compiled_sql: Union[str, NoneType] = None, extra_ctes_injected: bool = False, extra_ctes: List[dbt.contracts.graph.compiled.InjectedCTE] = <factory>, relation_name: Union[str, NoneType] = None, _pre_injected_sql: Union[str, NoneType] = None)\"\n    },\n    \"ParsedAnalysisNode\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"raw_sql\",\n        \"schema\",\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"resource_type\",\n        \"alias\",\n        \"checksum\"\n      ],\n      \"properties\": {\n        \"raw_sql\": {\n          \"type\": \"string\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"analysis\"\n          ]\n        },\n        \"alias\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"$ref\": \"#/definitions/FileHash\"\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/NodeConfig\",\n          \"default\": {\n            \"enabled\": true,\n            \"materialized\": \"view\",\n            \"persist_docs\": {},\n            \"vars\": {},\n            \"quoting\": {},\n            \"column_types\": {},\n            \"alias\": null,\n            \"schema\": null,\n            \"database\": null,\n            \"tags\": [],\n            \"full_refresh\": null,\n            \"post-hook\": [],\n            \"pre-hook\": []\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"compiled_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"build_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"deferred\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"ParsedAnalysisNode(raw_sql: str, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[Any]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: int = <factory>)\"\n    },\n    \"ParsedDataTestNode\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"raw_sql\",\n        \"schema\",\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"resource_type\",\n        \"alias\",\n        \"checksum\"\n      ],\n      \"properties\": {\n        \"raw_sql\": {\n          \"type\": \"string\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"test\"\n          ]\n        },\n        \"alias\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"$ref\": \"#/definitions/FileHash\"\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/TestConfig\",\n          \"default\": {\n            \"enabled\": true,\n            \"materialized\": \"test\",\n            \"persist_docs\": {},\n            \"vars\": {},\n            \"quoting\": {},\n            \"column_types\": {},\n            \"alias\": null,\n            \"schema\": \"dbt_test__audit\",\n            \"database\": null,\n            \"tags\": [],\n            \"full_refresh\": null,\n            \"severity\": \"ERROR\",\n            \"store_failures\": null,\n            \"where\": null,\n            \"limit\": null,\n            \"fail_calc\": \"count(*)\",\n            \"warn_if\": \"!= 0\",\n            \"error_if\": \"!= 0\",\n            \"post-hook\": [],\n            \"pre-hook\": []\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"compiled_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"build_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"deferred\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"ParsedDataTestNode(raw_sql: str, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.TestConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[Any]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: int = <factory>)\"\n    },\n    \"ParsedHookNode\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"raw_sql\",\n        \"schema\",\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"resource_type\",\n        \"alias\",\n        \"checksum\"\n      ],\n      \"properties\": {\n        \"raw_sql\": {\n          \"type\": \"string\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"operation\"\n          ]\n        },\n        \"alias\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"$ref\": \"#/definitions/FileHash\"\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/NodeConfig\",\n          \"default\": {\n            \"enabled\": true,\n            \"materialized\": \"view\",\n            \"persist_docs\": {},\n            \"vars\": {},\n            \"quoting\": {},\n            \"column_types\": {},\n            \"alias\": null,\n            \"schema\": null,\n            \"database\": null,\n            \"tags\": [],\n            \"full_refresh\": null,\n            \"post-hook\": [],\n            \"pre-hook\": []\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"compiled_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"build_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"deferred\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        },\n        \"index\": {\n          \"oneOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"ParsedHookNode(raw_sql: str, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[Any]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: int = <factory>, index: Union[int, NoneType] = None)\"\n    },\n    \"ParsedModelNode\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"raw_sql\",\n        \"schema\",\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"resource_type\",\n        \"alias\",\n        \"checksum\"\n      ],\n      \"properties\": {\n        \"raw_sql\": {\n          \"type\": \"string\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"model\"\n          ]\n        },\n        \"alias\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"$ref\": \"#/definitions/FileHash\"\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/NodeConfig\",\n          \"default\": {\n            \"enabled\": true,\n            \"materialized\": \"view\",\n            \"persist_docs\": {},\n            \"vars\": {},\n            \"quoting\": {},\n            \"column_types\": {},\n            \"alias\": null,\n            \"schema\": null,\n            \"database\": null,\n            \"tags\": [],\n            \"full_refresh\": null,\n            \"post-hook\": [],\n            \"pre-hook\": []\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"compiled_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"build_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"deferred\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"ParsedModelNode(raw_sql: str, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[Any]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: int = <factory>)\"\n    },\n    \"ParsedRPCNode\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"raw_sql\",\n        \"schema\",\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"resource_type\",\n        \"alias\",\n        \"checksum\"\n      ],\n      \"properties\": {\n        \"raw_sql\": {\n          \"type\": \"string\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"rpc\"\n          ]\n        },\n        \"alias\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"$ref\": \"#/definitions/FileHash\"\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/NodeConfig\",\n          \"default\": {\n            \"enabled\": true,\n            \"materialized\": \"view\",\n            \"persist_docs\": {},\n            \"vars\": {},\n            \"quoting\": {},\n            \"column_types\": {},\n            \"alias\": null,\n            \"schema\": null,\n            \"database\": null,\n            \"tags\": [],\n            \"full_refresh\": null,\n            \"post-hook\": [],\n            \"pre-hook\": []\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"compiled_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"build_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"deferred\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"ParsedRPCNode(raw_sql: str, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.NodeConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[Any]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: int = <factory>)\"\n    },\n    \"ParsedSchemaTestNode\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"raw_sql\",\n        \"test_metadata\",\n        \"schema\",\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"resource_type\",\n        \"alias\",\n        \"checksum\"\n      ],\n      \"properties\": {\n        \"raw_sql\": {\n          \"type\": \"string\"\n        },\n        \"test_metadata\": {\n          \"$ref\": \"#/definitions/TestMetadata\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"test\"\n          ]\n        },\n        \"alias\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"$ref\": \"#/definitions/FileHash\"\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/TestConfig\",\n          \"default\": {\n            \"enabled\": true,\n            \"materialized\": \"test\",\n            \"persist_docs\": {},\n            \"vars\": {},\n            \"quoting\": {},\n            \"column_types\": {},\n            \"alias\": null,\n            \"schema\": \"dbt_test__audit\",\n            \"database\": null,\n            \"tags\": [],\n            \"full_refresh\": null,\n            \"severity\": \"ERROR\",\n            \"store_failures\": null,\n            \"where\": null,\n            \"limit\": null,\n            \"fail_calc\": \"count(*)\",\n            \"warn_if\": \"!= 0\",\n            \"error_if\": \"!= 0\",\n            \"post-hook\": [],\n            \"pre-hook\": []\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"compiled_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"build_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"deferred\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        },\n        \"column_name\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"ParsedSchemaTestNode(raw_sql: str, test_metadata: dbt.contracts.graph.parsed.TestMetadata, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.TestConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[Any]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: int = <factory>, column_name: Union[str, NoneType] = None)\"\n    },\n    \"ParsedSeedNode\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"raw_sql\",\n        \"schema\",\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"resource_type\",\n        \"alias\",\n        \"checksum\"\n      ],\n      \"properties\": {\n        \"raw_sql\": {\n          \"type\": \"string\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"seed\"\n          ]\n        },\n        \"alias\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"$ref\": \"#/definitions/FileHash\"\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/SeedConfig\",\n          \"default\": {\n            \"enabled\": true,\n            \"materialized\": \"seed\",\n            \"persist_docs\": {},\n            \"vars\": {},\n            \"quoting\": {},\n            \"column_types\": {},\n            \"alias\": null,\n            \"schema\": null,\n            \"database\": null,\n            \"tags\": [],\n            \"full_refresh\": null,\n            \"quote_columns\": null,\n            \"post-hook\": [],\n            \"pre-hook\": []\n          }\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"compiled_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"build_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"deferred\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"ParsedSeedNode(raw_sql: str, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.SeedConfig = <factory>, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[Any]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: int = <factory>)\"\n    },\n    \"ParsedSnapshotNode\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"raw_sql\",\n        \"schema\",\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"resource_type\",\n        \"alias\",\n        \"checksum\",\n        \"config\"\n      ],\n      \"properties\": {\n        \"raw_sql\": {\n          \"type\": \"string\"\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"snapshot\"\n          ]\n        },\n        \"alias\": {\n          \"type\": \"string\"\n        },\n        \"checksum\": {\n          \"$ref\": \"#/definitions/FileHash\"\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/SnapshotConfig\"\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"compiled_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"build_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"deferred\": {\n          \"type\": \"boolean\",\n          \"default\": false\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"ParsedSnapshotNode(raw_sql: str, database: Union[str, NoneType], schema: str, fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, resource_type: dbt.node_types.NodeType, alias: str, checksum: dbt.contracts.files.FileHash, config: dbt.contracts.graph.model_config.SnapshotConfig, tags: List[str] = <factory>, refs: List[List[str]] = <factory>, sources: List[List[Any]] = <factory>, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, compiled_path: Union[str, NoneType] = None, build_path: Union[str, NoneType] = None, deferred: bool = False, unrendered_config: Dict[str, Any] = <factory>, created_at: int = <factory>)\"\n    },\n    \"SnapshotConfig\": {\n      \"type\": \"object\",\n      \"required\": [],\n      \"properties\": {\n        \"enabled\": {\n          \"type\": \"boolean\",\n          \"default\": true\n        },\n        \"materialized\": {\n          \"type\": \"string\",\n          \"default\": \"snapshot\"\n        },\n        \"persist_docs\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"post-hook\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Hook\"\n          },\n          \"default\": []\n        },\n        \"pre-hook\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/Hook\"\n          },\n          \"default\": []\n        },\n        \"vars\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"quoting\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"column_types\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"alias\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"tags\": {\n          \"oneOf\": [\n            {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"type\": \"string\"\n            }\n          ],\n          \"default\": []\n        },\n        \"full_refresh\": {\n          \"oneOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"strategy\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"unique_key\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"target_schema\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"target_database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"updated_at\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"check_cols\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": true,\n      \"description\": \"SnapshotConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True, materialized: str = 'snapshot', persist_docs: Dict[str, Any] = <factory>, post_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, pre_hook: List[dbt.contracts.graph.model_config.Hook] = <factory>, vars: Dict[str, Any] = <factory>, quoting: Dict[str, Any] = <factory>, column_types: Dict[str, Any] = <factory>, alias: Union[str, NoneType] = None, schema: Union[str, NoneType] = None, database: Union[str, NoneType] = None, tags: Union[List[str], str] = <factory>, full_refresh: Union[bool, NoneType] = None, strategy: Union[str, NoneType] = None, unique_key: Union[str, NoneType] = None, target_schema: Union[str, NoneType] = None, target_database: Union[str, NoneType] = None, updated_at: Union[str, NoneType] = None, check_cols: Union[str, List[str], NoneType] = None)\"\n    },\n    \"ParsedSourceDefinition\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"fqn\",\n        \"schema\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"source_name\",\n        \"source_description\",\n        \"loader\",\n        \"identifier\",\n        \"resource_type\"\n      ],\n      \"properties\": {\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"source_name\": {\n          \"type\": \"string\"\n        },\n        \"source_description\": {\n          \"type\": \"string\"\n        },\n        \"loader\": {\n          \"type\": \"string\"\n        },\n        \"identifier\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"source\"\n          ]\n        },\n        \"quoting\": {\n          \"$ref\": \"#/definitions/Quoting\",\n          \"default\": {\n            \"database\": null,\n            \"schema\": null,\n            \"identifier\": null,\n            \"column\": null\n          }\n        },\n        \"loaded_at_field\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"freshness\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/FreshnessThreshold\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"external\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/ExternalTable\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"columns\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"$ref\": \"#/definitions/ColumnInfo\"\n          },\n          \"default\": {}\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"source_meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"config\": {\n          \"$ref\": \"#/definitions/SourceConfig\",\n          \"default\": {\n            \"enabled\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"unrendered_config\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"relation_name\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"ParsedSourceDefinition(fqn: List[str], database: Union[str, NoneType], schema: str, unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, source_name: str, source_description: str, loader: str, identifier: str, resource_type: dbt.node_types.NodeType, quoting: dbt.contracts.graph.unparsed.Quoting = <factory>, loaded_at_field: Union[str, NoneType] = None, freshness: Union[dbt.contracts.graph.unparsed.FreshnessThreshold, NoneType] = None, external: Union[dbt.contracts.graph.unparsed.ExternalTable, NoneType] = None, description: str = '', columns: Dict[str, dbt.contracts.graph.parsed.ColumnInfo] = <factory>, meta: Dict[str, Any] = <factory>, source_meta: Dict[str, Any] = <factory>, tags: List[str] = <factory>, config: dbt.contracts.graph.model_config.SourceConfig = <factory>, patch_path: Union[pathlib.Path, NoneType] = None, unrendered_config: Dict[str, Any] = <factory>, relation_name: Union[str, NoneType] = None, created_at: int = <factory>)\"\n    },\n    \"Quoting\": {\n      \"type\": \"object\",\n      \"required\": [],\n      \"properties\": {\n        \"database\": {\n          \"oneOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"schema\": {\n          \"oneOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"identifier\": {\n          \"oneOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"column\": {\n          \"oneOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"Quoting(database: Union[bool, NoneType] = None, schema: Union[bool, NoneType] = None, identifier: Union[bool, NoneType] = None, column: Union[bool, NoneType] = None)\"\n    },\n    \"FreshnessThreshold\": {\n      \"type\": \"object\",\n      \"required\": [],\n      \"properties\": {\n        \"warn_after\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Time\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"error_after\": {\n          \"oneOf\": [\n            {\n              \"$ref\": \"#/definitions/Time\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"filter\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"FreshnessThreshold(warn_after: Union[dbt.contracts.graph.unparsed.Time, NoneType] = None, error_after: Union[dbt.contracts.graph.unparsed.Time, NoneType] = None, filter: Union[str, NoneType] = None)\"\n    },\n    \"FreshnessMetadata\": {\n      \"type\": \"object\",\n      \"required\": [],\n      \"properties\": {\n        \"dbt_schema_version\": {\n          \"type\": \"string\",\n          \"default\": \"https://schemas.getdbt.com/dbt/sources/v1.json\"\n        },\n        \"dbt_version\": {\n          \"type\": \"string\",\n          \"default\": \"0.20.0rc1\"\n        },\n        \"generated_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\",\n          \"default\": \"2021-06-07T14:49:01.095724Z\"\n        },\n        \"invocation_id\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"env\": {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"string\"\n          },\n          \"default\": {}\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"FreshnessMetadata(dbt_schema_version: str = <factory>, dbt_version: str = '0.20.0rc1', generated_at: datetime.datetime = <factory>, invocation_id: Union[str, NoneType] = <factory>, env: Dict[str, str] = <factory>)\"\n    },\n    \"SourceFreshnessRuntimeError\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"unique_id\",\n        \"status\"\n      ],\n      \"properties\": {\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"error\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"status\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"runtime error\"\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"SourceFreshnessRuntimeError(unique_id: str, error: Union[str, int, NoneType], status: dbt.contracts.results.FreshnessErrorEnum)\"\n    },\n    \"SourceFreshnessOutput\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"unique_id\",\n        \"max_loaded_at\",\n        \"snapshotted_at\",\n        \"max_loaded_at_time_ago_in_s\",\n        \"status\",\n        \"criteria\",\n        \"adapter_response\"\n      ],\n      \"properties\": {\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"max_loaded_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"snapshotted_at\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"max_loaded_at_time_ago_in_s\": {\n          \"type\": \"number\"\n        },\n        \"status\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"pass\",\n            \"warn\",\n            \"error\",\n            \"runtime error\"\n          ]\n        },\n        \"criteria\": {\n          \"$ref\": \"#/definitions/FreshnessThreshold\"\n        },\n        \"adapter_response\": {\n          \"type\": \"object\"\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"SourceFreshnessOutput(unique_id: str, max_loaded_at: datetime.datetime, snapshotted_at: datetime.datetime, max_loaded_at_time_ago_in_s: float, status: dbt.contracts.results.FreshnessStatus, criteria: dbt.contracts.graph.unparsed.FreshnessThreshold, adapter_response: Dict[str, Any])\"\n    },\n    \"Time\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"count\",\n        \"period\"\n      ],\n      \"properties\": {\n        \"count\": {\n          \"type\": \"integer\"\n        },\n        \"period\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"minute\",\n            \"hour\",\n            \"day\"\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"Time(count: int, period: dbt.contracts.graph.unparsed.TimePeriod)\"\n    },\n    \"ExternalTable\": {\n      \"type\": \"object\",\n      \"required\": [],\n      \"properties\": {\n        \"location\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"file_format\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"row_format\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"tbl_properties\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"partitions\": {\n          \"oneOf\": [\n            {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/ExternalPartition\"\n              }\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": true,\n      \"description\": \"ExternalTable(_extra: Dict[str, Any] = <factory>, location: Union[str, NoneType] = None, file_format: Union[str, NoneType] = None, row_format: Union[str, NoneType] = None, tbl_properties: Union[str, NoneType] = None, partitions: Union[List[dbt.contracts.graph.unparsed.ExternalPartition], NoneType] = None)\"\n    },\n    \"ExternalPartition\": {\n      \"type\": \"object\",\n      \"required\": [],\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"data_type\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        }\n      },\n      \"additionalProperties\": true,\n      \"description\": \"ExternalPartition(_extra: Dict[str, Any] = <factory>, name: str = '', description: str = '', data_type: str = '', meta: Dict[str, Any] = <factory>)\"\n    },\n    \"SourceConfig\": {\n      \"type\": \"object\",\n      \"required\": [],\n      \"properties\": {\n        \"enabled\": {\n          \"type\": \"boolean\",\n          \"default\": true\n        }\n      },\n      \"additionalProperties\": true,\n      \"description\": \"SourceConfig(_extra: Dict[str, Any] = <factory>, enabled: bool = True)\"\n    },\n    \"ParsedMacro\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"macro_sql\",\n        \"resource_type\"\n      ],\n      \"properties\": {\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"macro_sql\": {\n          \"type\": \"string\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"macro\"\n          ]\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/MacroDependsOn\",\n          \"default\": {\n            \"macros\": []\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"docs\": {\n          \"$ref\": \"#/definitions/Docs\",\n          \"default\": {\n            \"show\": true\n          }\n        },\n        \"patch_path\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"arguments\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/MacroArgument\"\n          },\n          \"default\": []\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"ParsedMacro(unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, macro_sql: str, resource_type: dbt.node_types.NodeType, tags: List[str] = <factory>, depends_on: dbt.contracts.graph.parsed.MacroDependsOn = <factory>, description: str = '', meta: Dict[str, Any] = <factory>, docs: dbt.contracts.graph.unparsed.Docs = <factory>, patch_path: Union[str, NoneType] = None, arguments: List[dbt.contracts.graph.unparsed.MacroArgument] = <factory>, created_at: int = <factory>)\"\n    },\n    \"MacroDependsOn\": {\n      \"type\": \"object\",\n      \"required\": [],\n      \"properties\": {\n        \"macros\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"MacroDependsOn(macros: List[str] = <factory>)\"\n    },\n    \"MacroArgument\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"name\"\n      ],\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"MacroArgument(name: str, type: Union[str, NoneType] = None, description: str = '')\"\n    },\n    \"ParsedDocumentation\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"block_contents\"\n      ],\n      \"properties\": {\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"block_contents\": {\n          \"type\": \"string\"\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"ParsedDocumentation(unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, block_contents: str)\"\n    },\n    \"ParsedExposure\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"fqn\",\n        \"unique_id\",\n        \"package_name\",\n        \"root_path\",\n        \"path\",\n        \"original_file_path\",\n        \"name\",\n        \"type\",\n        \"owner\"\n      ],\n      \"properties\": {\n        \"fqn\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"unique_id\": {\n          \"type\": \"string\"\n        },\n        \"package_name\": {\n          \"type\": \"string\"\n        },\n        \"root_path\": {\n          \"type\": \"string\"\n        },\n        \"path\": {\n          \"type\": \"string\"\n        },\n        \"original_file_path\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"dashboard\",\n            \"notebook\",\n            \"analysis\",\n            \"ml\",\n            \"application\"\n          ]\n        },\n        \"owner\": {\n          \"$ref\": \"#/definitions/ExposureOwner\"\n        },\n        \"resource_type\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"model\",\n            \"analysis\",\n            \"test\",\n            \"snapshot\",\n            \"operation\",\n            \"seed\",\n            \"rpc\",\n            \"docs\",\n            \"source\",\n            \"macro\",\n            \"exposure\"\n          ],\n          \"default\": \"exposure\"\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"default\": \"\"\n        },\n        \"maturity\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\",\n              \"enum\": [\n                \"low\",\n                \"medium\",\n                \"high\"\n              ]\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"meta\": {\n          \"type\": \"object\",\n          \"default\": {}\n        },\n        \"tags\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"default\": []\n        },\n        \"url\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"depends_on\": {\n          \"$ref\": \"#/definitions/DependsOn\",\n          \"default\": {\n            \"macros\": [],\n            \"nodes\": []\n          }\n        },\n        \"refs\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"sources\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"default\": []\n        },\n        \"created_at\": {\n          \"type\": \"integer\",\n          \"default\": 1623077341\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"ParsedExposure(fqn: List[str], unique_id: str, package_name: str, root_path: str, path: str, original_file_path: str, name: str, type: dbt.contracts.graph.unparsed.ExposureType, owner: dbt.contracts.graph.unparsed.ExposureOwner, resource_type: dbt.node_types.NodeType = <NodeType.Exposure: 'exposure'>, description: str = '', maturity: Union[dbt.contracts.graph.unparsed.MaturityType, NoneType] = None, meta: Dict[str, Any] = <factory>, tags: List[str] = <factory>, url: Union[str, NoneType] = None, depends_on: dbt.contracts.graph.parsed.DependsOn = <factory>, refs: List[List[str]] = <factory>, sources: List[List[str]] = <factory>, created_at: int = <factory>)\"\n    },\n    \"ExposureOwner\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"email\"\n      ],\n      \"properties\": {\n        \"email\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"oneOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"additionalProperties\": false,\n      \"description\": \"ExposureOwner(email: str, name: Union[str, NoneType] = None)\"\n    }\n  },\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"https://schemas.getdbt.com/dbt/manifest/v2.json\"\n}"
        }
    ]
}